type Card = {
  id: number
  imgUrl: string
  title: string
  createdId?: string
}


window.addEventListener('load', () => {
  const btn1 = document.querySelector<HTMLButtonElement>('#kitBtn-1')
  const btn2 = document.querySelector<HTMLButtonElement>('#kitBtn-2')
  const fields = document.querySelector<HTMLDivElement>('.field__cards')
  const filedsBottom = document.querySelector<HTMLDivElement>('.field__cards-bottom')
  const count = 5
  const activedCardsId: string[] = []
  const cards1: Card[] = [
    {
      id: 1,
      imgUrl: "https://adsboard-static.spectrumdata.tech/files/blogs_content/fe2a89919d8aa9a/v7f79c8.jpg",
      title: "Car 1"
    },
    {
      id: 2,
      imgUrl: "https://motor.ru/thumb/1500x0/filters:quality(75):no_upscale()/imgs/2022/01/27/11/5197968/f7aba1d92862152a77a6fcf637d2ea171e1defe8.jpg",
      title: "Car 2"
    },
    {
      id: 3,
      imgUrl: "https://rg.ru/uploads/images/169/12/62/35_e43ba14c.jpg",
      title: "Car 3"
    },
    {
      id: 4,
      imgUrl: "https://img.gazeta.ru/files3/225/15619225/602fd8501fa16_img-pic_32ratio_1200x800-1200x800-70042.jpg",
      title: "Car 4"
    }
  ]
  const cards2: Card[] = [
    {
      id: 1,
      imgUrl: "https://img.freepik.com/free-photo/beautiful-kitten-with-colorful-clouds_23-2150752964.jpg",
      title: "Cat 1"
    },
    {
      id: 2,
      imgUrl: "https://i.pinimg.com/236x/c8/cc/24/c8cc24bba37a25c009647b8875aae0e3.jpg",
      title: "Cat 2"
    },
    {
      id: 3,
      imgUrl: "https://masterpiecer-images.s3.yandex.net/5fd531dca6427c7:upscaled",
      title: "Cat 3"
    },
    {
      id: 4,
      imgUrl: "https://avatars.dzeninfra.ru/get-zen_doc/8269145/pub_641ec1d0798be415157b4180_641f3d1cd4b1f54fcf2f0a01/scale_1200",
      title: "Cat 4"
    },
    {
      id: 5,
      imgUrl: "https://avatars.dzeninfra.ru/get-zen_doc/8098241/pub_641ec1d0798be415157b4180_641ec210d2d45b2f14e36c73/scale_1200",
      title: "Cat 5"
    }
  ]
  const allCards = formatterDate([...cards1, ...cards2])

  function formatterDate(arrays: any[]) {
    return arrays.map((item: Card) => {
      const newId = item.title.split(' ')[0] + '-' + item.id
      item.createdId = newId

      return item
    })

  }

  btn1?.addEventListener('click', () => {
    const count = 4

    gettingCards(count, allCards)
  })
  btn2?.addEventListener('click', () => {
    const count = 5

    gettingCards(count, allCards)
  })


  gettingCards(count, cards2)
  function gettingCards(count: number, array: Card[]) {
    if (!fields) return false

    fields.innerHTML = ''



    for (let i = 0; i < count; i++) {

      createCard(array[i].createdId!, array[i].title, array[i].imgUrl, fields)

      const card = document.querySelector<HTMLDivElement>(`.field__card[data-id="${array[i].createdId}"]`)
      card?.addEventListener('click', toggleActiveIdCards)

    }
  }

  function toggleActiveIdCards(this: HTMLDivElement) {
    const activeId = this.dataset.id
    if (!activeId) return false
    const idIndex = activedCardsId.indexOf(activeId);

    if (idIndex > -1) {
      activedCardsId.splice(idIndex, 1)
    } else {
      activedCardsId.push(activeId)
    };
    toggleActiveCards(activeId)
  }


  function toggleActiveCards(id: string) {
    if (!allCards) return false

    const arr = allCards.filter((card: Card) => {
      if (card.createdId === id) {
        createCard(id, card.title, card.imgUrl, filedsBottom!)
      }
    })


  }

})


function createCard(id: string, title: string, imageUrl: string, element: HTMLDivElement) {
  element!.insertAdjacentHTML('beforeend', `
  <div class="field__card" data-id="${id}" >
 <img class= "field__card-img" src="${imageUrl}" alt="${title}" />
 <div class="field__card-title" > ${title} </div>
 </div>
 `)
}